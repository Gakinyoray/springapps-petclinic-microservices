name: Deploy api-gateway to Azure Spring Apps
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'spring-petclinic-api-gateway/**'
      
env:
  AZURE_SUBSCRIPTION: c1d1be4e-2f5c-4bbc-ab97-a8e17b4b3cc6 # customize this
  SPRING_APPS_SERVICE: petclinic-spring-apps # customize this
  KEYVAULT: spring-apps-vault # customize this
  # ==== APPS ====:
  API_GATEWAY: api-gateway
  # ==== JARS ====:
  API_GATEWAY_JAR: spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-2.5.1.jar

jobs:
  staging:
    runs-on: ubuntu-latest
    steps:
    - name: Login with Key Vault SP
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get service SP from Key Vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEYVAULT }}
        secrets: "AZURE-CREDENTIALS-FOR-SPRING"
      id: keyvaultaction
    
    - name: Get MySQL Secrets from Key Vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEYVAULT }}
        secrets: "MYSQL-SERVER-FULL-NAME,MYSQL-DATABASE-NAME,MYSQL-SERVER-ADMIN-LOGIN-NAME,MYSQL-SERVER-ADMIN-PASSWORD"
      id: mysqlsecrets
      
    - name: Login with Service SP
      uses: azure/login@v1
      with:
        # creds: ${{ steps.keyvaultaction.outputs.AZURE-CREDENTIALS-FOR-SPRING }}
        creds: ${{ secrets.AZURE_CREDENTIALS_APP }}
        
    - name: Checkout your repo
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: maven build, clean
      run: |
        mvn clean package -DskipTests -Denv=cloud
      
    - name: "Deploy to Staging"
      id: deploy-to-springapps
      uses: Azure/spring-cloud-deploy@v1
      with:
          azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
          action: deploy
          service-name: ${{ env.SPRING_APPS_SERVICE }}
          app-name: ${{ env.API_GATEWAY }}
          use-staging-deployment: false
          package: ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }}
          jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql

    - name: "Get Endpoint"
      id: get-endpoint      
      run: |
        run: echo "app-url=$(az spring show -n ${{ env.SPRING_APPS_SERVICE }} --query "[properties.fqdn]" --output tsv)" >> $GITHUB_OUTPUT

    - name: Check the deployed service health check
      uses: jtalk/url-health-check-action@v2
      with:
        url: ${{ steps.get-endpoint.outputs.app-url }}/api/customer/actuator/health
        follow-redirect: true
        max-attempts: 60
        retry-delay: 10s
        retry-all: true
